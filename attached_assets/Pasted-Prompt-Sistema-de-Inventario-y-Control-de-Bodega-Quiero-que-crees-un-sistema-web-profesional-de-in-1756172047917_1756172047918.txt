Prompt: Sistema de Inventario y Control de Bodega

Quiero que crees un sistema web profesional de inventario y control de bodega, similar a ZapERP, con backend, frontend y base de datos, siguiendo las siguientes especificaciones:

1. Tecnologías principales

Backend: Node.js con Express (API REST).

Frontend: React con TailwindCSS (interfaz moderna y responsiva).

Base de datos: PostgreSQL o MySQL.

ORM recomendado: Prisma o Sequelize.

Autenticación y seguridad: JWT + bcrypt para contraseñas + verificación en dos pasos (2FA opcional).

Servidor de correo: Gmail SMTP para notificaciones.

2. Funcionalidades principales

El sistema debe incluir los siguientes módulos:

🔑 Módulo de autenticación

Registro de usuarios (solo administradores pueden crear usuarios).

Login seguro con correo/usuario y contraseña.

Recuperación de contraseña con token temporal.

Roles y permisos:

Administrador: gestiona usuarios, bodegas, productos y reportes.

Operador: gestiona movimientos e inventario.

Consulta: solo lectura.

📦 Módulo de productos

Crear, editar, eliminar y listar productos.

Atributos: código, nombre, categoría, marca, descripción, unidad de medida, precio de compra, precio de venta, stock mínimo, stock máximo, proveedor.

Soporte para códigos de barra / QR.

🏬 Módulo de bodegas

Crear múltiples bodegas o sucursales.

Configurar ubicación, capacidad y responsable.

Asignar productos a bodegas.

🔄 Módulo de movimientos

Entrada de productos (compra, recepción).

Salida de productos (venta, consumo interno, ajuste).

Transferencia de productos entre bodegas.

Registro con fecha, hora, usuario responsable y motivo.

📊 Módulo de reportes y dashboard

Reporte de existencias por producto y bodega.

Reporte de productos bajo stock mínimo.

Reporte de movimientos por rango de fechas.

Estadísticas en dashboard:

Gráfico de stock total.

Gráfico de entradas y salidas por mes.

Alertas automáticas de stock bajo vía correo.

👥 Módulo de proveedores y clientes

Registrar proveedores: nombre, RUT, contacto, teléfono, correo, dirección.

Registrar clientes (opcional si se quiere manejar ventas).

3. Interfaz de usuario (Frontend)

Dashboard inicial con métricas rápidas.

Menú lateral con acceso a: Inventario, Movimientos, Bodegas, Reportes, Configuración.

Vistas en tablas con filtros, búsqueda y paginación.

Formularios con validación en tiempo real.

Notificaciones visuales (ej: toast de éxito/error).

Soporte multiusuario y multi-bodega.

4. Base de datos (ejemplo de tablas)

usuarios (id, nombre, correo, contraseña_hash, rol, estado)

bodegas (id, nombre, ubicación, capacidad, responsable_id)

productos (id, codigo, nombre, categoria, descripcion, unidad, precio_compra, precio_venta, stock_min, stock_max, proveedor_id)

inventario (id, producto_id, bodega_id, cantidad_actual)

movimientos (id, producto_id, bodega_origen, bodega_destino, tipo, cantidad, usuario_id, fecha, motivo)

proveedores (id, nombre, rut, contacto, telefono, correo, direccion)

5. Extras opcionales

Exportar reportes a Excel o PDF.

Integración con lector de códigos de barra.

API pública para conectar con otros sistemas.

Configuración de notificaciones automáticas (correo al administrador si un producto llega a stock mínimo).

Multi-idioma (español/inglés).

6. Estilo de desarrollo

Código limpio, comentado y modular.

Arquitectura MVC (para backend).

Uso de controladores y servicios separados.

Buenas prácticas de seguridad (protección contra SQL Injection, XSS, CSRF).

Documentación en Swagger para la API REST.